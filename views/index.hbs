<div class="row" id="canvas"></div>
<div id="content">
  <div id="planes">


    <div class="jumbotron-fluid pink">

      <div class="row pink">
        <div class="col">
          <div class="logoBack">
            <h1 class="titleHead">s17</h1>
          </div>
          <video autoplay muted loop playsinline poster="">
            {{!-- <source crossorigin="anonymous" src="http://rudes.de/videos/loop2.mp4" type="video/mp4" /> --}}
          </video>
        </div>
      </div>
    </div>

{{!--     <div class="row pink">
      <div class="col-md-6"></div>
      <div class="col-12 col-md-3 stuccoThree">
      </div>
      <div class="col-md-3"></div>
    </div>

    <div class="storyCont row pink"> 
      <div class="col-md-2"></div>
      <div class="col-12 col-md-8 pink">
        <div class="padCopy">
    {{!--       <p class="" data-aos="fade">Located in an area.</p> --}}
        </div>
      </div>
      <div class="col-md-2"></div>
    </div> --}}

    <div class="topSpace row">
      <div class="col-md-2"></div>

      <div class="col-12 col-md-7">  
          <div class="landscape-wrapper" >
              <div class="plane" data-vs-id="multiple-planes-vs" data-fs-id="multiple-planes-fs">
                <img id="imgIndexOne" crossorigin="anonymous" src="../images/stucco_3_1024.jpg" data-sampler="planeTexture" />
              </div>        
          </div>
      </div>

      <div class="col col-md-3"></div>
    </div>

    <div class="row" data-aos="fade-up" data-aos-id="indexPicOne">
      <div class="col-md-3"></div>
      <div class="col-12 col-md-6">
        <div class="habCont">
          <h3>Inhabitants</h3>
        </div>
      </div>
      <div class="col-md-3"></div>
    </div>

    <div class="row gray bottomSpace" data-aos="fade-up">
      <div class="col-md-3"></div>
      <div class="col-12 col-md-6 gray">
          <p class="pink" id="indexCopyOne" style="color: black"></p>
          <span data-aos="fade-up" style="color: black" id="inHabitBtn" class="pink">Explore more &#8594;</span>
      </div>
      <div class="col-md-3"></div>
    </div>



    <div class="row">
      <div class="col col-md-3"></div>
      <div class="col-12 col-md-7">  
          <div class="landscape-wrapper" >
              <div class="plane" data-vs-id="multiple-planes-vs" data-fs-id="multiple-planes-fs">
                <img id="imgIndexTwo" crossorigin="anonymous" src="../images/stucco_4_1024.jpg" data-sampler="planeTexture" />
              </div>        
          </div>
      </div>
      <div class="col col-md-2"></div>
    </div>

    <div class="row"  data-aos="fade" data-aos-id="indexPicTwo">
      <div class="col col-md-2"></div>
      <div class="col-12 col-md-5">
        <div class="habCont">
          <h3 id="" data-aos="fade-up">Formation</h3>
        </div>
      </div>
      <div class="col col-md-5"></div>
    </div>

    <div class="row" data-aos="fade-up">
      <div class="col-md-2"></div>
        <div class="col-12 col-md-7">
          <p class="bluGray" id="indexCopyTwo" style="color: white"></p>
          <span data-aos="fade-up" style="color: white" id="formBtn" class="bluGray">Explore more &#8594;</span>
        </div>
      <div class="col-md-3"></div>
    </div>

    <div class="bottomSpace"></div>

    <div class="row topSpace" data-aos="fade-up" data-aos-id="indexThree">
      <div class="col col-md-3" >
      </div>
      <div class="col-12 col-md-6">
        <div class="habCont">
          <h3 class="gray" style="color: white;">Interactive</h3>
        </div>
      </div>
      <div class="col col-md-3" >
      </div>
    </div>

    <div class="row bottomSpace" data-aos="fade-up">
      <div class="col col-md-3"></div>
      <div class="col-12 col-md-6">
        <div><p class="gray" id="indexCopyThree" style="color: white">
          </p>
          <span data-aos="fade-up" style="color: white" id="interABtn" class="gray">Explore more &#8594;</span>
        </div>
      </div>
      <div class="col col-md-3"></div>
    </div>

  </div>
</div>


<script id="multiple-planes-vs" type="x-shader/x-vertex">
    #ifdef GL_ES
    precision mediump float;
    #endif

    // default mandatory variables
    attribute vec3 aVertexPosition;
    attribute vec2 aTextureCoord;

    uniform mat4 uMVMatrix;
    uniform mat4 uPMatrix;

    uniform mat4 planeTextureMatrix;
    varying vec2 vTextureMatrix;
    // custom variables
    varying vec3 vVertexPosition;
    varying vec2 vTextureMatrixCoord;

    uniform float uTime;

    uniform float uPlaneDeformation;

    void main() {

        vec3 vertexPosition = aVertexPosition;

        // float distanceFromCenter = distance(vec2(vertexPosition.x, vertexPosition.y), vec2(0.5, vertexPosition.x));
        // vertexPosition.z += 1.5 * cos(5.0 * (distanceFromCenter - (uTime / 100.0)));

        //cool effect on scroll
        //vertexPosition.y += sin(((vertexPosition.x + 1.0) / 2.0) * 3.141592) * (sin(uPlaneDeformation / 90.0));

        gl_Position = uPMatrix * uMVMatrix * vec4(vertexPosition, 1.0);

        // varyings
        vVertexPosition = vertexPosition;
        vTextureMatrixCoord = (planeTextureMatrix * vec4(aTextureCoord, 1.0, 1.0)).xy;
    }

</script>
<script id="multiple-planes-fs" type="x-shader/x-fragment">
    #ifdef GL_ES
    precision mediump float;
    #endif

    varying vec3 vVertexPosition;
    varying vec2 vTextureCoord;
    varying vec2 vTextureMatrixCoord;
    varying vec2 vTextureMatrix;

    uniform sampler2D uSampler0;
    uniform sampler2D planeTexture;
    uniform float uPlaneDeformation;

    void main( void ) {
        // slides transitions
        //vec4 finalColor = texture2D( uSampler0, vTextureMatrix);

        vec4 finalColor = texture2D(planeTexture, vTextureMatrixCoord);

        gl_FragColor = finalColor;
    }
</script>


<script id="displacement-fs" type="x-shader/x-fragment">
    #ifdef GL_ES
    precision mediump float;
    #endif

    varying vec3 vVertexPosition;
    varying vec2 vTextureCoord;

    uniform sampler2D renderTexture;
    uniform sampler2D displacementTexture;

    uniform float uDisplacement;

    void main( void ) {
        vec2 textureCoords = vTextureCoord;
        vec4 displacement = texture2D(displacementTexture, textureCoords);

        // displace along Y axis
        textureCoords.y += (sin(displacement.r) / 5.0) * uDisplacement;

        vec4 finalColor = texture2D(renderTexture, textureCoords);
        gl_FragColor = finalColor;
    }
</script>

<script src="/js/index.js"></script>
<script src="/js/curtains.min.js"></script>
<script src="/js/post.processing.displacement.setup.js" ></script>